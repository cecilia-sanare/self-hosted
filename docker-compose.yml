version: '2.4'

name: servers
services:
  traefik:
    image: traefik:v2.10
    restart: unless-stopped
    volumes:
      # So that Traefik can listen to the Docker events (read-only)
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # TOML Configuration with global options
      - ${DATA_DIR}/traefik/traefik.toml:/traefik.toml
      # Configuration for the file provider (needed for host networking and default TLS Options)
      - ${DATA_DIR}/traefik/traefik-provider.toml:/traefik-provider.toml
      # LetsEncrypt ACME Configuration
      - ${DATA_DIR}/traefik/acme.json:/acme.json
      # Log File (optional)
      - ${DATA_DIR}/traefik/traefik.log:/traefik.log
      # Log File (optional)
      - ${DATA_DIR}/traefik/traefik-access.log:/traefik-access.log
    networks:
      - traefik
    ports:
      # The Web UI (enabled by --api.insecure=true in traefik.toml)
      - 8080:8080
      # The Available Ports (forward your router's incoming ports to the ports on the host)
      - 80:80
      - 443:443
    env_file: .env

  jellyfin:
    image: jellyfin/jellyfin
    group_add: # by id as these may not exist within the container. Needed to provide permissions to the VAAPI Devices
      - '107' #render
      - '44' #video
    networks:
      - traefik
    volumes:
      - ${DATA_DIR}/jellyfin/config:/config
      - ${DATA_DIR}/jellyfin/cache:/cache
      - /mnt/media:/media
    restart: unless-stopped
    devices:
      # VAAPI Devices
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
    expose:
      - 8096
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.entrypoints=websecure
      - traefik.http.routers.jellyfin.rule=Host(`fin.sanare.dev`)

      # Middleware
      - traefik.http.routers.jellyfin.middlewares=jellyfin-mw
      - traefik.http.middlewares.jellyfin-mw.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      - traefik.http.middlewares.jellyfin-mw.headers.STSSeconds=315360000
      #### The stsIncludeSubdomains is set to true, the includeSubDomains directive will be
      #### appended to the Strict-Transport-Security header.
      - traefik.http.middlewares.jellyfin-mw.headers.STSIncludeSubdomains=true
      #### Set stsPreload to true to have the preload flag appended to the Strict-Transport-Security header.
      - traefik.http.middlewares.jellyfin-mw.headers.STSPreload=true
      #### Set forceSTSHeader to true, to add the STS header even when the connection is HTTP.
      - traefik.http.middlewares.jellyfin-mw.headers.forceSTSHeader=true
      #### Set frameDeny to true to add the X-Frame-Options header with the value of DENY.
      - traefik.http.middlewares.jellyfin-mw.headers.frameDeny=true
      #### Set contentTypeNosniff to true to add the X-Content-Type-Options header with the value nosniff.
      - traefik.http.middlewares.jellyfin-mw.headers.contentTypeNosniff=true
      #### Set browserXssFilter to true to add the X-XSS-Protection header with the value 1; mode=block.
      - traefik.http.middlewares.jellyfin-mw.headers.customresponseheaders.X-XSS-PROTECTION=0
      #### The customFrameOptionsValue allows the X-Frame-Options header value to be set with a custom value. This
      #### overrides the FrameDeny option.
      - traefik.http.middlewares.jellyfin-mw.headers.customFrameOptionsValue='allow-from https://fin.sanare.dev'

  # cafe:
  #   image: ghcr.io/cecilia-sanare/cafe:latest
  #   environment:
  #     - RUST_LOG=debug
  #     - DATABASE_URL=postgres://postgres:postgres@cafe-database:5432/cafe
  #   tty: true
  #   networks:
  #     - traefik
  #     - local
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.cafe.entrypoints=websecure
  #     - traefik.http.routers.cafe.rule=Host(`cafe.sanare.dev`)
  #   expose:
  #     - 3030
  #   depends_on:
  #     - cafe-database

  # cafe-database:
  #   image: postgres:16-alpine
  #   restart: always
  #   expose:
  #     - 5432
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=cafe
  #   networks:
  #     - local

networks:
  traefik:
    external: false
  local:
    external: false